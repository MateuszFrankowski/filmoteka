{"mappings":"A,0G,0GEMA,2DAKA,yDCLA,2DAKA,oFCTA,sGAKE,0BGgFE,oCHhFF,2BAQA,gHAKA,2GAMA,2JAQE,gGAOF,qEAME,kCAGE,iHAQJ,0EAME,mGKhEJ,2CAEI","sources":["index.bdb15cc4.css","src/css/main.css","src/css/main.scss","src/sass/main.scss","src/sass/components/_pageSelector.scss","src/sass/utils/_flex.scss","src/sass/utils/_font.scss","src/sass/utils/_media.scss","src/sass/utils/_transition.scss","src/sass/components/_footer.scss"],"sourcesContent":["@import \"https://fonts.googleapis.com/css2?family=DM+Sans:wght@400;500;700&family=Titan+One&display=swap\";\n@import \"https://fonts.googleapis.com/css2?family=DM+Sans:wght@400;500;700&family=Titan+One&display=swap\";\nbody {\n  scroll-behavior: smooth;\n  font-family: DM Sans, sans-serif;\n}\n\n.container {\n  max-width: 1280px;\n  margin: 0 auto;\n  padding: 0 20px;\n}\n\nbody {\n  scroll-behavior: smooth;\n  font-family: DM Sans, sans-serif;\n}\n\n.container {\n  width: 100%;\n  min-width: 320px;\n  max-width: 1280px;\n  margin: 0 auto;\n  padding: 0 20px;\n}\n\n.pages {\n  width: 100%;\n  justify-content: center;\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 1.33;\n  display: flex;\n}\n\n.pages--none {\n  display: none;\n}\n\n@media screen and (min-width: 768px) {\n  .pages--none {\n    display: flex;\n  }\n}\n\n.pages__list {\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  gap: 16px;\n  list-style: none;\n  display: flex;\n}\n\n.pages__item {\n  height: 10px;\n  justify-content: center;\n  align-items: center;\n  display: flex;\n  transform: translateY(-30%);\n}\n\n.pages__btn {\n  height: 40px;\n  cursor: pointer;\n  background-color: rgba(0, 0, 0, 0);\n  border: none;\n  border-radius: 5px;\n  justify-content: center;\n  align-items: center;\n  display: flex;\n}\n\n.pages__btn:focus, .pages__btn:hover {\n  color: #ff6b08;\n  transition: color .25s cubic-bezier(.4, 0, .2, 1);\n}\n\n.pages__rim {\n  height: 40px;\n  width: 40px;\n  background-color: #f7f7f7;\n  margin: 0;\n}\n\n.pages__rim--disabled {\n  cursor: auto;\n}\n\n.pages__rim--disabled:focus, .pages__rim--disabled:hover {\n  color: #000;\n  transition: color .25s cubic-bezier(.4, 0, .2, 1);\n}\n\n.pages__active {\n  color: #fff;\n  height: 40px;\n  width: 40px;\n  background-color: #ff6b08;\n}\n\n.pages__active:focus, .pages__active:hover {\n  color: #000;\n  transition: color .25s cubic-bezier(.4, 0, .2, 1);\n}\n\n.footer {\n  background-color: get(bg-secondary);\n}\n\n.footer__icon {\n  width: 14px;\n  height: 12px;\n}\n\n/*# sourceMappingURL=index.bdb15cc4.css.map */\n","@charset \"UTF-8\";\n/*\n * Główny plik dla stylów.\n * Wszystkie partials podłączamy tutaj.\n */\n@import url('https://fonts.googleapis.com/css2?family=DM+Sans:wght@400;500;700&family=Titan+One&display=swap');\nbody {\n  font-family: 'DM Sans', sans-serif;\n  scroll-behavior: smooth;\n}\n\n.container {\n  max-width: 1280px;\n  margin: 0 auto;\n  padding: 0 20px;\n} /*# sourceMappingURL=main.css.map */\n",null,"/*\n * Główny plik dla stylów.\n * Wszystkie partials podłączamy tutaj.\n */\n@import url('https://fonts.googleapis.com/css2?family=DM+Sans:wght@400;500;700&family=Titan+One&display=swap');\n\nbody {\n  font-family: 'DM Sans', sans-serif;\n  scroll-behavior: smooth;\n}\n\n.container {\n  width: 100%;\n  min-width: 320px;\n  max-width: 1280px;\n  margin: 0 auto;\n  padding: 0 20px;\n}\n\n@import './utils/vars';\n// Style dla pliku z przykładem HTML fragmentu\n\n@import './components/headerHome';\n@import './components/headerLibrary';\n@import './components/filmsDB';\n@import './components/modalFilmDetails';\n@import './components/pageSelector';\n@import './components/footer';\n@import './components/modalFooter';\n","@use '../utils/forward' as *;\n\n.pages {\n  width: 100%;\n  @include flex-display(null, null, center);\n  @include font-type(500, 12px, 1.33);\n\n  &--none {\n    display: none;\n\n    @include media-mapp('tablet') {\n      display: flex;\n    }\n  }\n\n  &__list {\n    list-style: none;\n    @include flex-display(row, 16px, center, center);\n  }\n\n  &__item {\n    transform: translateY(-30%);\n    @include flex-display(null, null, center, center);\n    height: 10px;\n  }\n\n  &__btn {\n    height: 40px;\n    @include flex-display(null, null, center, center);\n    border: none;\n    border-radius: 5px;\n    background-color: transparent;\n    cursor: pointer;\n\n    &:focus,\n    &:hover {\n      color: color-get('text-accent');\n      @include transition-add('color');\n    }\n  }\n\n  &__rim {\n    background-color: color-get('bg-secondary');\n    height: 40px;\n    width: 40px;\n    margin: 0;\n\n    &--disabled {\n      cursor: auto;\n\n      &:focus,\n      &:hover {\n        color: color-get('text-primary');\n        @include transition-add('color');\n      }\n    }\n  }\n\n  &__active {\n    background-color: color-get('bg-decorative');\n    color: color-get('text-alternative');\n    height: 40px;\n    width: 40px;\n\n    &:focus,\n    &:hover {\n      color: color-get('text-primary');\n      @include transition-add('color');\n    }\n  }\n}\n","// Sposób użycia:\n//   w klasie kontenera:\n//     @include flex-display($direction, $gapVal, $justify, $align)\n//       gdzie:\n//         $direction - kierunek rozmieszczenia elementów (none, wrap, row, column)\n//         $gapVal - wartość właściwości gap (value, null)\n//         $justify - opcjonalne rozmieszczenie wzdłuż głównej osi (wartości justify-content)\n//         $align - opcjonalne rozmieszczenie wzdłuż osi poprzecznej (wartości aling-items),\n//                 aby podać wartość $align należy podać wartość $justify (przynajmniej null)\n\n//   w klasie elementu [dla użytego w rodzicu @include flex(wrap, $gapVal, ...)]:\n//     @include flex-basis($elementNr, $gapVal)\n//       gdzie:\n//         $elementNr - ilość elementów w linii\n//         $gapVal - wartość $gapVal rodzica\n\n// Przykłady użycia:\n//   dla siatki elementów:\n//     .selektor-rodzic {\n//       @include flex-display(wrap, 30px);\n//     }\n//     .selektor-element {\n//       @include flex-basis(4, 30px);\n//     }\n\n//   dla rozmieszczenia w linii poziomej wycentrowane tylko w poziomie:\n//     .selektor-rodzic {\n//       @include flex-display(row, 50px, null, center);\n//     }\n\n//   dla rozmieszczenia w linii pionowej wycentrowane tylko w pionie:\n//     .selektor-rodzic {\n//       @include flex-display(column, 40px, center);\n//     }\n\n// Zaleca się dla elementów, które będą siatką w mediach dla tabletów i desktopów\n//   użyć również dla komórek $direction: wrap i dla elementów podać $elementNr: 1.\n//   Pozwoli to na nieduplikowanie @include flex() w rodzicu.\n//   Warunkiem jest aby wartość gap była stała dla wszystkich mediów.\n\n@import './error';\n\n$justifyContent: (\n  null,\n  center,\n  space-between,\n  space-around,\n  start,\n  end,\n  flex-start,\n  flex-end,\n  left right\n);\n\n$alignItems: (\n  null,\n  normal,\n  stretch,\n  center,\n  start,\n  end,\n  flex-start,\n  flex-end,\n  baseline,\n  first baseline,\n  last baseline,\n  safe center,\n  unsafe center,\n  inherit,\n  initial,\n  revert,\n  revert-layer,\n  unset\n);\n\n@mixin display($direction: null, $gapVal: null, $justify: null, $align: null) {\n  display: flex;\n  @if $direction == wrap {\n    flex-wrap: $direction;\n  } @else if index(column row null, $direction) {\n    flex-direction: $direction;\n  } @else {\n    @include error('errFlex');\n  }\n  @if type-of($gapVal) == 'number' and index('px' 'em' 'rem', unit($gapVal)) {\n    gap: $gapVal;\n  } @else if $gapVal == null {\n  } @else {\n    @include error('errFlex');\n  }\n  @if index($justifyContent, $justify) {\n    justify-content: $justify;\n  } @else {\n    @include error('errFlex');\n  }\n  @if index($alignItems, $align) {\n    align-items: $align;\n  } @else {\n    @include error('errFlex');\n  }\n}\n\n@mixin basis($elementNr, $gapVal) {\n  $check: 1;\n  @if type-of($elementNr) == 'number' and index('', unit($elementNr)) {\n  } @else {\n    $check: 0;\n  }\n  @if type-of($gapVal) == 'number' and index('px' 'em' 'rem', unit($gapVal)) {\n  } @else {\n    $check: 0;\n  }\n  @if $check == 1 {\n    flex-basis: calc((100% - #{$gapVal * ($elementNr - 1)}) / #{$elementNr});\n  } @else {\n    @include error('errFlex');\n  }\n}\n","// Sposób użycia:\n//   @include font-type($weight, $size, $height, $spacing)\n//     gdzie:\n//       $weight - wartość font-weight w jednostkach 100-900\n//       $size - wartość font-size w px / em / rem\n//       $height - wartość line-height w mnożniku\n//       $spacing - wartość letter-spacing w jednostkach em\n//     Wszystkie zmienne są opcjonalne.\n//       Jeśli nie ma potrzeby użyć zmiennej należy wprowadzić wartość null.\n//       Jeśli nie używane są ostatnie zmienne można nie wprowadzać wartości.\n\n// Przykłady użycia:\n//   == letter-spacing takie samo jak w body / przodku\n//     .selektor {\n//       @include font-type(700, 32px, 1.5)\n//     }\n\n//   == font-weight i line-height takie samo jak w body / przodku\n//     .selektor {\n//       @include font-type(null, text-large, null, 0.02em)\n//     }\n\n//   == wszystkie elementy czcionki wprowadzone jako zmienne [nie zalecane używanie]\n//     .selektor {\n//       @include font-type(bold, header-normal, medium, large)\n//     }\n\n@import './error';\n\n$fontWeight: (\n  'normal': 400,\n  'medium': 500,\n  'bold': 700,\n  'black': 900,\n);\n@function getWeight($val) {\n  @return map-get($fontWeight, $val);\n}\n\n$fontSize: (\n  'text-little': 12px,\n  'text-small': 14px,\n  'text-normal': 16px,\n  'text-medium': 18px,\n  'text-big': 20px,\n  'text-height': 24px,\n  'text-large': 28px,\n  'header-normal': 32px,\n  'header-medium': 36px,\n  'header-big': 40px,\n  'header-height': 48px,\n  'header-large': 60px,\n);\n@function getSize($val) {\n  @return map-get($fontSize, $val);\n}\n\n$fontHeight: (\n  'little': 1.13,\n  'small': 1.25,\n  'normal': 1.5,\n  'medium': 1.75,\n  'big': 2,\n  'height': 2.5,\n  'large': 3,\n);\n@function getHeight($val) {\n  @return map-get($fontHeight, $val);\n}\n\n$fontSpacing: (\n  'small': 0.02em,\n  'normal': 0.03em,\n  'medium': 0.04em,\n  'big': 0.05em,\n  'large': 0.06em,\n);\n@function getSpacing($val) {\n  @return map-get($fontSpacing, $val);\n}\n\n@mixin type($weight: null, $size: null, $height: null, $spacing: null) {\n  $fontWeights: (100, 200, 300, 400, 500, 600, 700, 800, 900);\n  @if type-of($weight) == 'number' and index('', unit($weight)) {\n    @if index($fontWeights, $weight) {\n      font-weight: $weight;\n    } @else {\n      @include error('errText');\n    }\n  } @else {\n    @if #{getWeight($weight)} != '' {\n      font-weight: #{getWeight($weight)};\n    } @else if $weight == null {\n    } @else {\n      @include error('errText');\n    }\n  }\n\n  @if type-of($size) == 'number' and index('px' 'em' 'rem', unit($size)) {\n    font-size: #{$size};\n  } @else if #{getSize($size)} != '' {\n    font-size: getSize($size);\n  } @else if $size == null {\n  } @else {\n    @include error('errText');\n  }\n\n  @if type-of($height) == 'number' and index('', unit($height)) {\n    line-height: $height;\n  } @else if #{getHeight($height)} != '' {\n    line-height: getHeight($height);\n  } @else if $height == null {\n  } @else {\n    @include error('errText');\n  }\n\n  @if type-of($spacing) == 'number' and index('em', unit($spacing)) {\n    letter-spacing: $spacing;\n  } @else if #{getSpacing($spacing)} != '' {\n    letter-spacing: getSpacing($spacing);\n  } @else if $spacing == null {\n  } @else {\n    @include error('errText');\n  }\n}\n","// Użycie:\n//   @include media-mapp($breakpoint1, $breakpoint2)\n//   gdzie:\n//     $breakpoint1 - wartość dla media (min-width: value)\n//     $breakpoint2 - wartość dla media (max-width: value)\n//     jako $breakpoint1 / $breakpoint2 użyj wartości z $breakpoint('mobile', 'tablet', 'desktop') lub wprowadź wartość ręcznie\n//     jeżeli $breakpoint1 / $breakpoint2 jest niepotrzebny wprowadź null\n//     jako jednostek można używać px, em, rem\n\n// Przykłdy użycia:\n//   .selektor {\n//     background-color: grey;\n\n//     dla mediów do 768px wprowadzonych jako 'medium'\n//       @include media-mapp(null, 'tablet') {\n//         background-color: green;\n//       };\n\n//     dla mediów od 800px do 1200px wprowadzonych jako wartość i 'large'\n//       @include media-mapp(800px, 'desktop') {\n//         background-color: blue;\n//       };\n\n//     dla mediów od 1200px wprowadzonych jako wartość w rem (dla html font-size:16px) i px (oba zapisy są poprawne, można pomijać null na końcu)\n//       @include media-mapp(75rem, null) {\n//         background-color: red;\n//       };\n//       @include media-mapp(1200px) {\n//         background-color: red;\n//       };\n\n//     błedy wprowadzenia - wygeneruje gradient w biało-czerwone paski\n//       @include media-mapp(null, null) {\n//         background-color: yellow;\n//       };\n//       @include media-mapp(null) {\n//         background-color: yellow;\n//       };\n//       @include media-mapp() {\n//         background-color: yellow;\n//       };\n//       @include media-mapp(480, 1200abc) {\n//         background-color: yellow;\n//       };\n//   }\n\n@import './error';\n\n$breakpoint: (\n  'mobile': 480px,\n  'tablet': 768px,\n  'desktop': 1200px,\n);\n\n@function getBreakpoint($var) {\n  @return map-get($breakpoint, $var);\n}\n\n@mixin mapp($breakpoint1: null, $breakpoint2: null) {\n  $media-min: 0;\n  $media-max: 0;\n\n  @if type-of($breakpoint1) == 'number' {\n    $media-min: $breakpoint1;\n    @if index('px' 'em' 'rem', unit($media-min)) == null {\n      $media-min: 0;\n    }\n  } @else {\n    $media-min: getBreakpoint($breakpoint1);\n    @if type-of($media-min) != 'number' {\n      $media-min: 0;\n    }\n  }\n\n  @if type-of($breakpoint2) == 'number' {\n    $media-max: $breakpoint2;\n    @if index('px' 'em' 'rem', unit($media-max)) == null {\n      $media-max: 0;\n    }\n  } @else {\n    $media-max: getBreakpoint($breakpoint2);\n    @if type-of($media-max) != 'number' {\n      $media-max: 0;\n    }\n  }\n\n  @if ($media-min != 0 and $media-max == 0) {\n    @media screen and (min-width: $media-min) {\n      @content;\n    }\n  } @else if ($media-min == 0 and $media-max != 0) {\n    @media screen and (max-width: $media-max) {\n      @content;\n    }\n  } @else if ($media-min != 0 and $media-max != 0) {\n    @media screen and (min-width: $media-min) and (max-width: $media-max) {\n      @content;\n    }\n  } @else {\n    @media screen and (max-width: 1px) {\n      @content;\n    }\n  }\n}\n","// Sposób użycia:\n//   @include transition-add('transition-name-1' 'transition-name-2' ...)\n//     gdzie:\n//       transition-name-nr - kolejna nazwa elementu do animacji (nazwy takie same jak właściwości do animacji)\n//     Należy pamiętać o umieszczaniu o nieoddzielaniu nazw przecinkami.\n//\n// Przykłady użycia:\n//   animacja koloru czcionki\n//     .selektor {\n//       @include transition-add('color');\n//     }\n//\n//   animacja koloru tła i koloru ikony\n//     .selektor {\n//       @include transition-add('background-color' 'fill');\n//     }\n\n@import './error';\n\n$transitionProperty: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n$transition: (\n  'color': color $transitionProperty,\n  'fill': fill $transitionProperty,\n  'background-color': background-color $transitionProperty,\n  'border-color': border-color $transitionProperty,\n  'box-shadow': box-shadow $transitionProperty,\n  'transform': transform $transitionProperty,\n  'opacity': opacity $transitionProperty,\n  'visibility': visibility $transitionProperty,\n  'flex-basis': visibility $transitionProperty,\n  'filter': visibility $transitionProperty,\n);\n\n$transitionCheck: (\n  'color',\n  'fill',\n  'background-color',\n  'border-color',\n  'box-shadow',\n  'transform',\n  'opacity',\n  'visibility',\n  'flex-basis',\n  'filter'\n);\n\n@function getOneTransition($var) {\n  @return map-get($transition, $var);\n}\n\n@mixin add($var: []) {\n  $allTransition: '';\n  $check: 1;\n  $i: 0;\n  @each $type, $trans in $var {\n    $i: $i + 1;\n    @if $i>1 {\n      $allTransition: $allTransition + ', ';\n    }\n    @if index($transitionCheck, #{$type}) {\n    } @else {\n      $check: 0;\n    }\n    $allTransition: $allTransition + getOneTransition($type);\n  }\n  @if $check == 1 {\n    transition: #{$allTransition};\n  } @else {\n    @include error('errTransition');\n  }\n}\n",".footer{\n    background-color: get(bg-secondary);\n    &__icon{\n        width:14px; \n        height: 12px    }\n}"],"names":[],"version":3,"file":"index.bdb15cc4.css.map"}